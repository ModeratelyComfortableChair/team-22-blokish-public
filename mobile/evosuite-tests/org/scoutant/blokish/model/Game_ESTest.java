/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 24 22:31:22 GMT 2018
 */

package org.scoutant.blokish.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.scoutant.blokish.model.Board;
import org.scoutant.blokish.model.Game;
import org.scoutant.blokish.model.Move;
import org.scoutant.blokish.model.Piece;
import org.scoutant.blokish.model.Square;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Game_ESTest extends Game_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Game game0 = new Game();
      Board board0 = new Board((-4861));
      Piece piece0 = board0.findPieceByType("P5");
      int int0 = game0.scoreEnemySeedsIfAdding(405, piece0, 19, 20);
      assertEquals(1, int0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(0, "`XY2oBeF=", 20, 20);
      boolean boolean0 = game0.valid(piece0, 0, 0);
      assertFalse(boolean0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Game game0 = new Game();
      game0.boards = null;
      // Undeclared exception!
      try { 
        game0.winner();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Game game0 = new Game();
      LinkedList<Board> linkedList0 = new LinkedList<Board>();
      game0.boards = (List<Board>) linkedList0;
      // Undeclared exception!
      try { 
        game0.winner();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, "jc#2", 5, 12);
      game0.add(piece0, 824, 0);
      // Undeclared exception!
      game0.valid(piece0, 1, 5);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.valid((Piece) null, 5, 20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Board", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, 20, "sc", 20, 0);
      // Undeclared exception!
      try { 
        game0.valid(piece0, 20, 20);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece((-356), 5, "played move : ", (-2857), 1869);
      // Undeclared exception!
      try { 
        game0.valid(piece0, 17, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, 20, "sc", 20, 20);
      Piece piece1 = piece0.clone();
      game0.add(piece1, 20, 0);
      Move move0 = new Move(piece1, 0, 20, 0);
      // Undeclared exception!
      game0.valid(move0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, 20, "sc", 2, 4);
      Move move0 = new Move(piece0, 20, 0);
      // Undeclared exception!
      try { 
        game0.valid(move0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece((-2), 1, "sc", 1131, 412);
      Move move0 = new Move(piece0, 1, 6, 1);
      // Undeclared exception!
      try { 
        game0.valid(move0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Game game0 = new Game();
      game0.historize((Move) null);
      // Undeclared exception!
      try { 
        game0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Move", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(1013, "60\"0Oj", 1013, 1013);
      // Undeclared exception!
      game0.scoreEnemySeedsIfAdding((-1799), piece0, 1013, (-1799));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Game game0 = new Game();
      int[][] intArray0 = new int[3][5];
      game0.ab = intArray0;
      // Undeclared exception!
      try { 
        game0.scoreEnemySeedsIfAdding(0, (Piece) null, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Game game0 = new Game();
      game0.boards = null;
      // Undeclared exception!
      try { 
        game0.reset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Game game0 = new Game();
      LinkedList<Move> linkedList0 = new LinkedList<Move>();
      Piece piece0 = new Piece(3, "not valid! ", 1878, 3);
      Move move0 = new Move(piece0, 3, (-1162), 0);
      linkedList0.add(move0);
      // Undeclared exception!
      try { 
        game0.replay(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, 20, "sc", 20, 0);
      LinkedList<Move> linkedList0 = new LinkedList<Move>();
      Move move0 = new Move(piece0, 5732, 1);
      linkedList0.add(move0);
      // Undeclared exception!
      try { 
        game0.replay(linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, 20, "a[35N|", 20, 20);
      Piece piece1 = piece0.clone();
      game0.add(piece1, 20, (-85));
      Move move0 = new Move(piece0, 20, 18);
      // Undeclared exception!
      game0.play(move0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.play((Move) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(10, 0, "", 0, 0);
      Move move0 = new Move(piece0, 0, 0, 0);
      // Undeclared exception!
      try { 
        game0.play(move0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece((-507), 20, "sc", 3597, (-507));
      Move move0 = new Move(piece0, 0, 20);
      // Undeclared exception!
      try { 
        game0.play(move0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Game game0 = new Game();
      game0.boards = null;
      // Undeclared exception!
      try { 
        game0.over();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.fits((Piece) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Board", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Game game0 = new Game();
      LinkedList<Board> linkedList0 = new LinkedList<Board>();
      game0.boards = (List<Board>) linkedList0;
      Piece piece0 = new Piece((-4950), 20, "", 20, (-4950));
      // Undeclared exception!
      try { 
        game0.fits(piece0, 20, (-4950));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(3262, 3262, "sc", 68, 3262);
      // Undeclared exception!
      game0.add(piece0, 3262, 68);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.add((Piece) null, (-616), 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Board", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, 0, " ,`*h-F_^]S", 20, 1436);
      piece0.size = 20;
      // Undeclared exception!
      try { 
        game0.add(piece0, 4, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(0, "`XY2oBeF=", 20, 20);
      Move move0 = new Move(piece0, 0, 2712);
      // Undeclared exception!
      try { 
        game0.play(move0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // android/util/Log
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, "jc#2", 5, 12);
      game0.fits(piece0, 12, (-1124));
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(0, "`XY2oBeF=", 20, 20);
      boolean boolean0 = game0.fits(piece0, 0, 0);
      assertEquals(20, game0.size);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece((-380), 20, "(gBYB", 20, 20);
      boolean boolean0 = game0.valid(piece0, 216, (-3642));
      assertFalse(boolean0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(0, "`XY2oBeF=", 20, 20);
      boolean boolean0 = game0.valid(piece0, 20, 0);
      assertEquals(20, game0.size);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Game game0 = new Game();
      game0.reset();
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(11, 20, "sc", 3, (-825));
      Square square0 = new Square(0, 3);
      Piece piece1 = piece0.add(square0);
      int int0 = game0.scoreEnemySeedsIfAdding((-825), piece1, 3, 7);
      assertEquals(1, int0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Game game0 = new Game();
      String string0 = game0.toString();
      assertEquals("# moves : 0", string0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(0, "`XY2oBeF=", 20, 20);
      Move move0 = new Move(piece0, 0, 2712);
      boolean boolean0 = game0.valid(move0);
      assertFalse(boolean0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, "sc", 1540, 0);
      Move move0 = new Move(piece0, 0, 20, 20);
      game0.add(move0.piece, 20, 21);
      // Undeclared exception!
      game0.fits(move0.piece, 3, 20);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, "P5", 20, 20);
      LinkedList<Move> linkedList0 = new LinkedList<Move>();
      Move move0 = new Move(piece0, 20, 20);
      linkedList0.add(move0);
      // Undeclared exception!
      try { 
        game0.replay(linkedList0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // android/util/Log
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Game game0 = new Game();
      boolean boolean0 = game0.replay(game0.moves);
      assertEquals(20, game0.size);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Game game0 = new Game();
      int int0 = game0.winner();
      assertEquals(3, int0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Game game0 = new Game();
      boolean boolean0 = game0.over();
      assertFalse(boolean0);
      assertEquals(20, game0.size);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Game game0 = new Game();
      Piece piece0 = new Piece(20, "sc", 1540, 0);
      Move move0 = new Move(piece0, 0, 20, 20);
      game0.historize(move0);
      String string0 = game0.toString();
      assertEquals(20, game0.size);
      assertEquals("# moves : 1\n0:20:0:sc", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Game game0 = new Game();
      List<Move> list0 = game0.deserialize("r*<S{");
      assertEquals(20, game0.size);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.valid((Move) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Game game0 = new Game();
      // Undeclared exception!
      try { 
        game0.scoreEnemySeedsIfAdding(2131558402, (Piece) null, 2131558402, 2131558402);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.scoutant.blokish.model.Game", e);
      }
  }
}
